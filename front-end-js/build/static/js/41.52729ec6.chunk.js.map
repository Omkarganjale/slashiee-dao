{"version":3,"sources":["../node_modules/@mui/icons-material/esm/CameraAlt.js","components/adminEcommerce/AddCustomerModal.jsx","components/adminEcommerce/columnShapes/CustomerColumnShape.jsx","pages/adminEcommerce/CustomerList.jsx","../node_modules/@mui/icons-material/esm/KeyboardArrowDown.js","components/adminEcommerce/TabLabel.jsx"],"names":["createSvgIcon","_jsx","cx","cy","r","d","StyledModalCard","styled","Card","theme","top","left","maxWidth","minWidth","position","padding","boxShadow","shadows","transform","width","breakpoints","down","height","overflow","StyledBadge","Badge","borderRadius","backgroundColor","palette","primary","main","background","paper","StyledMenuItem","MenuItem","fontSize","fontWeight","color","text","disabled","StyledSelect","Select","mode","secondary","divider","AddCustomerModal","open","onClose","edit","data","initialValues","firstName","name","split","lastName","email","location","phone","city","country","state","status","toLowerCase","fieldValidationSchema","Yup","shape","min","required","useFormik","validationSchema","onSubmit","values","console","log","errors","handleChange","handleSubmit","touched","Modal","Box","textAlign","py","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","type","accept","id","style","display","IconButton","component","CameraAlt","sx","UkoAvatar","alt","src","avatar","Grid","container","spacing","className","item","sm","xs","mb","DarkTextField","placeholder","onChange","value","error","Boolean","helperText","fullWidth","input","InputBase","IconComponent","KeyboardArrowDown","FlexBox","justifyContent","marginTop","Button","variant","onClick","marginRight","borderColor","CustomerColumnShape","Header","accessor","Cell","row","original","alignItems","flexDirection","ml","useState","openModal","setOpenModal","EditIconButton","tabs","label","count","CustomerList","useTitle","t","useTranslation","currentTab","setCurrentTab","addCustomer","setAddCustomer","filteredData","customersFakeData","filter","pt","pb","SearchInput","endIcon","Add","TabContext","TabList","_","newValue","map","Tab","disableRipple","TabLabel","title","total","CustomTable","columnShape","marginLeft"],"mappings":"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","file":"static/js/41.52729ec6.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');","import { CameraAlt, KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Badge, Box, Button, Card, Grid, IconButton, InputBase, MenuItem, Modal, Select, styled } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2, H6 } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; // component props interface\n\n// styled components\nconst StyledModalCard = styled(Card)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  maxWidth: 700,\n  minWidth: 300,\n  position: \"absolute\",\n  padding: \"1.5rem\",\n  boxShadow: theme.shadows[2],\n  transform: \"translate(-50%, -50%)\",\n  width: \"100%\",\n  [theme.breakpoints.down(\"sm\")]: {\n    \"& .main-form\": {\n      height: 200,\n      overflow: \"auto\"\n    }\n  }\n}));\nconst StyledBadge = styled(Badge)(({\n  theme\n}) => ({\n  \"& .MuiBadge-badge\": {\n    width: 25,\n    height: 25,\n    borderRadius: \"50%\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`\n  }\n}));\nconst StyledMenuItem = styled(MenuItem)(({\n  theme\n}) => ({\n  fontSize: 12,\n  fontWeight: 500,\n  color: theme.palette.text.disabled\n}));\nconst StyledSelect = styled(Select)(({\n  theme\n}) => ({\n  height: 35,\n  fontSize: 12,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.mode === \"light\" ? theme.palette.secondary[300] : theme.palette.divider,\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AddCustomerModal = ({\n  open,\n  onClose,\n  edit,\n  data\n}) => {\n  const initialValues = {\n    firstName: data?.name.split(\" \")[0] || \"\",\n    lastName: data?.name.split(\" \")[1] || \"\",\n    email: data?.email || \"\",\n    location: data?.location || \"\",\n    phone: data?.phone || \"\",\n    city: \"\",\n    country: \"\",\n    state: \"\",\n    status: data?.status.toLowerCase() || \"active\"\n  };\n  const fieldValidationSchema = Yup.object().shape({\n    firstName: Yup.string().min(3, \"Too Short\").required(\"First Name is Required!\"),\n    lastName: Yup.string().required(\"Last Name is Required!\"),\n    email: Yup.string().required(\"Email is Required!\"),\n    location: Yup.string().required(\"Location is Required!\"),\n    phone: Yup.string().min(11, \"Too short\").required(\"Phone is Required!\"),\n    country: Yup.string().min(3, \"Too short\").required(\"Country is Required!\"),\n    city: Yup.string().min(3, \"Too short\").required(\"City is Required!\"),\n    state: Yup.string().min(3, \"Too short\").required(\"State is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema: fieldValidationSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return <Modal open={open} onClose={onClose}>\n      <StyledModalCard>\n        <H2>{edit ? \"Edit Product\" : \"Add new Customer\"}</H2>\n\n        <Box textAlign=\"center\" py={3}>\n          <StyledBadge overlap=\"circular\" anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }} badgeContent={<label htmlFor=\"icon-button-file\">\n                <input type=\"file\" accept=\"image/*\" id=\"icon-button-file\" style={{\n            display: \"none\"\n          }} />\n\n                <IconButton aria-label=\"upload picture\" component=\"span\">\n                  <CameraAlt sx={{\n              fontSize: 16,\n              color: \"background.paper\"\n            }} />\n                </IconButton>\n              </label>}>\n            <UkoAvatar sx={{\n            width: 100,\n            height: 100\n          }} alt=\"Travis Howard\" src={data && edit ? data.avatar : \"/static/user/profile-picture.png\"} />\n          </StyledBadge>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2} className=\"main-form\">\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>First Name</H6>\n              <DarkTextField placeholder=\"John\" name=\"firstName\" onChange={handleChange} value={values.firstName} error={Boolean(errors.firstName && touched.firstName)} helperText={touched.firstName && errors.firstName} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Last Name</H6>\n              <DarkTextField placeholder=\"Smith\" name=\"lastName\" onChange={handleChange} value={values.lastName} error={Boolean(errors.lastName && touched.lastName)} helperText={touched.lastName && errors.lastName} />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Email</H6>\n              <DarkTextField placeholder=\"uilib@gmail.com\" name=\"email\" onChange={handleChange} value={values.email} error={Boolean(errors.email && touched.email)} helperText={touched.email && errors.email} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Location</H6>\n              <DarkTextField placeholder=\"Corner View\" name=\"location\" onChange={handleChange} value={values.location} error={Boolean(errors.location && touched.location)} helperText={touched.location && errors.location} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Phone</H6>\n              <DarkTextField placeholder=\"+0188000000\" name=\"phone\" onChange={handleChange} value={values.phone} error={Boolean(errors.phone && touched.phone)} helperText={touched.phone && errors.phone} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>City</H6>\n              <DarkTextField placeholder=\"Sylhet\" name=\"city\" onChange={handleChange} value={values.city} error={Boolean(errors.city && touched.city)} helperText={touched.city && errors.city} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Country</H6>\n              <DarkTextField placeholder=\"Bangladesh\" name=\"country\" onChange={handleChange} value={values.country} error={Boolean(errors.country && touched.country)} helperText={touched.country && errors.country} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>State/Region</H6>\n              <DarkTextField placeholder=\"Asia\" name=\"state\" onChange={handleChange} value={values.state} error={Boolean(errors.state && touched.state)} helperText={touched.state && errors.state} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Status</H6>\n              <StyledSelect fullWidth name=\"status\" value={values.status} onChange={handleChange} input={<InputBase placeholder=\"Asia\" />} IconComponent={() => <KeyboardArrowDown fontSize=\"small\" />}>\n                <StyledMenuItem value=\"active\">Active</StyledMenuItem>\n                <StyledMenuItem value=\"disabled\">Disabled</StyledMenuItem>\n              </StyledSelect>\n            </Grid>\n          </Grid>\n\n          <FlexBox justifyContent=\"flex-end\" marginTop={2}>\n            <Button fullWidth variant=\"outlined\" onClick={onClose} sx={{\n            width: 124,\n            fontSize: 12,\n            marginRight: 2,\n            color: \"text.disabled\",\n            borderColor: \"text.disabled\"\n          }}>\n              Cancel\n            </Button>\n            <Button fullWidth type=\"submit\" variant=\"contained\" sx={{\n            width: 124,\n            fontSize: 12\n          }}>\n              Save\n            </Button>\n          </FlexBox>\n        </form>\n      </StyledModalCard>\n    </Modal>;\n};\n\nexport default AddCustomerModal;","import EditIconButton from \"components/EditIconButton\";\nimport FlexBox from \"components/FlexBox\";\nimport { H6, Small, Tiny } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useState } from \"react\";\nimport AddCustomerModal from \"../AddCustomerModal\";\nconst CustomerColumnShape = [{\n  Header: \"Customer Name\",\n  accessor: \"customer\",\n  minWidth: 200,\n  Cell: ({\n    row\n  }) => {\n    const {\n      avatar,\n      name,\n      position\n    } = row.original;\n    return <FlexBox alignItems=\"center\">\n          <UkoAvatar src={avatar} />\n          <FlexBox flexDirection=\"column\" ml={1.5}>\n            <H6 color=\"text.primary\">{name}</H6>\n            <Tiny color=\"text.disabled\">{position}</Tiny>\n          </FlexBox>\n        </FlexBox>;\n  }\n}, {\n  Header: \"Location\",\n  accessor: \"location\",\n  minWidth: 200\n}, {\n  Header: \"Date\",\n  accessor: \"date\",\n  minWidth: 150\n}, {\n  Header: \"Phone\",\n  accessor: \"phone\",\n  minWidth: 150\n}, {\n  Header: \"Status\",\n  accessor: \"status\",\n  minWidth: 130,\n  maxWidth: 130,\n  Cell: ({\n    value\n  }) => <Small sx={{\n    backgroundColor: value.toLowerCase() === \"active\" ? \"success.main\" : \"error.main\",\n    color: \"background.paper\",\n    borderRadius: 10,\n    padding: \".2rem 1rem\"\n  }}>\n        {value}\n      </Small>\n}, {\n  Header: \"Action\",\n  accessor: \"action\",\n  maxWidth: 100,\n  Cell: ({\n    row\n  }) => {\n    const [openModal, setOpenModal] = useState(false);\n    return <>\n          <EditIconButton onClick={() => setOpenModal(true)} />\n\n          <AddCustomerModal edit open={openModal} data={row.original} onClose={() => setOpenModal(false)} />\n        </>;\n  }\n}];\nexport default CustomerColumnShape;","import { Add } from \"@mui/icons-material\";\nimport { TabContext, TabList } from \"@mui/lab\";\nimport { Box, Button, Tab } from \"@mui/material\";\nimport AddCustomerModal from \"components/adminEcommerce/AddCustomerModal\";\nimport CustomerColumnShape from \"components/adminEcommerce/columnShapes/CustomerColumnShape\";\nimport CustomTable from \"components/adminEcommerce/CustomTable\";\nimport { customersFakeData } from \"components/adminEcommerce/fakeData\";\nimport TabLabel from \"components/adminEcommerce/TabLabel\";\nimport SearchInput from \"components/SearchInput\";\nimport useTitle from \"hooks/useTitle\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { HeadingWrapper } from \"./ProductList\";\n\nconst CustomerList = () => {\n  // change navbar title\n  useTitle(\"Customer List\");\n  const {\n    t\n  } = useTranslation();\n  const [currentTab, setCurrentTab] = useState(\"1\");\n  const [addCustomer, setAddCustomer] = useState(false); // handle tab item change\n\n  const handleTabChange = (_, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  const filteredData = customersFakeData.filter(item => item.status === \"Active\" && currentTab === \"2\" || item.status === \"Blocked\" && currentTab === \"3\" || currentTab === \"1\");\n  return <Box pt={2} pb={4}>\n      <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\n        <SearchInput placeholder=\"Find Customer\" />\n\n        <Button variant=\"contained\" endIcon={<Add />} onClick={() => setAddCustomer(true)}>\n          {t(\"Add Customer\")}\n        </Button>\n\n        <AddCustomerModal open={addCustomer} onClose={() => setAddCustomer(false)} />\n      </HeadingWrapper>\n\n      <TabContext value={currentTab}>\n        <TabList onChange={handleTabChange} variant=\"scrollable\" sx={{\n        mb: 1\n      }}>\n          {tabs.map(({\n          value,\n          label,\n          count\n        }) => <Tab disableRipple value={value} label={<TabLabel title={t(label)} total={count} />} key={value} />)}\n        </TabList>\n\n        <CustomTable data={filteredData} columnShape={CustomerColumnShape} />\n      </TabContext>\n    </Box>;\n};\n\nconst tabs = [{\n  value: \"1\",\n  label: \"All\",\n  count: 35\n}, {\n  value: \"2\",\n  label: \"Active\",\n  count: 45\n}, {\n  value: \"3\",\n  label: \"Blocked\",\n  count: 25\n}];\nexport default CustomerList;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import FlexBox from \"components/FlexBox\";\nimport { H6, Small } from \"components/Typography\";\n\nconst TabLabel = ({\n  title,\n  total\n}) => {\n  return <FlexBox alignItems=\"center\" color=\"text.primary\">\n      <H6>{title}</H6>\n      <Small sx={{\n      backgroundColor: \"divider\",\n      padding: \"0px 10px\",\n      borderRadius: \"10px\",\n      marginLeft: 1\n    }}>\n        {total}\n      </Small>\n    </FlexBox>;\n};\n\nexport default TabLabel;"],"sourceRoot":""}