{"version":3,"sources":["components/todoList/AddTodoForm.jsx","components/todoList/StyledComponent.js","components/todoList/Todo.jsx","pages/TodoList.jsx","hooks/useTitle.jsx","components/AddIconButton.jsx","components/DarkTextField.jsx"],"names":["AddTodoForm","props","showAddTodoForm","setShowAddTodoForm","validationSchema","Yup","shape","title","min","required","date","description","useFormik","initialValues","statusColor","mentionClient","onSubmit","values","console","log","errors","handleChange","handleSubmit","touched","setFieldValue","Box","sx","marginTop","display","DarkTextField","fullWidth","name","placeholder","value","onChange","helperText","error","Boolean","mb","DatePicker","newDate","renderInput","params","color","rows","multiline","padding","paddingY","FlexBox","alignItems","FormLabel","component","RadioGroup","row","Radio","size","Button","variant","type","width","onClick","backgroundColor","DroppableWrapper","styled","maxHeight","minHeight","overflow","todoList","height","marginRight","borderRadius","id","author","image","viewColumns","todo","todos","slice","progress","done","Todo","useState","columns","setColumns","t","useTranslation","Grid","container","spacing","onDragEnd","result","destination","source","droppableId","index","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","Object","entries","map","columnId","item","xs","sm","lg","Card","marginY","Add","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","style","boxShadow","marginBottom","justifyContent","IconButton","MoreHoriz","textAlign","pt","pb","fontWeight","mt","py","LinearProgress","AvatarGroup","UkoAvatar","alt","src","AddIconButton","marginLeft","TodoList","useTitle","text","useContext","TitleContext","setTitle","useEffect","p","border","borderColor","fontSize","StyledDarkTextField","TextField","theme","palette","primary","main","borderWidth","mode","secondary","divider"],"mappings":"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","file":"static/js/39.8070315d.chunk.js","sourcesContent":["import { DatePicker } from \"@mui/lab\";\nimport { Box, Button, FormLabel, Radio, RadioGroup } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; // component props interface\n\nconst AddTodoForm = props => {\n  const {\n    showAddTodoForm,\n    setShowAddTodoForm\n  } = props; // form field validation\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().min(3, \"Too Short\").required(\"Title is Required!\"),\n    date: Yup.date().required(\"Date is Required!\"),\n    description: Yup.string().min(10, \"Too Short\").required(\"Description is Required!\")\n  });\n  const initialValues = {\n    title: \"\",\n    date: \"\",\n    description: \"\",\n    statusColor: \"#61A9FF\",\n    mentionClient: \"\"\n  };\n  const {\n    errors,\n    values,\n    handleChange,\n    handleSubmit,\n    touched,\n    setFieldValue\n  } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      setShowAddTodoForm(false);\n    }\n  });\n  return <form onSubmit={handleSubmit}>\n      <Box sx={{\n      marginTop: 2,\n      display: showAddTodoForm ? \"auto\" : \"none\"\n    }}>\n        <DarkTextField fullWidth name=\"title\" placeholder=\"Title\" value={values.title} onChange={handleChange} helperText={touched.title && errors.title} error={Boolean(touched.title && errors.title)} sx={{\n        mb: 1\n      }} />\n\n        <DatePicker value={values.date} onChange={newDate => setFieldValue(\"date\", newDate)} renderInput={params => <DarkTextField {...params} name=\"date\" fullWidth error={Boolean(touched.date && errors.date)} helperText={touched.date && errors.date} sx={{\n        mb: 1,\n        \"& .MuiSvgIcon-root\": {\n          color: \"text.disabled\"\n        }\n      }} />} />\n        <DarkTextField fullWidth name=\"mentionClient\" placeholder=\"@mention Client\" onChange={handleChange} value={values.mentionClient} sx={{\n        mb: 1\n      }} />\n        <DarkTextField fullWidth rows={5} multiline name=\"description\" placeholder=\"Description\" value={values.description} onChange={handleChange} error={Boolean(touched.description && errors.description)} helperText={touched.description && errors.description} sx={{\n        \"& .MuiOutlinedInput-root\": {\n          padding: 0,\n          \"& textarea\": {\n            paddingY: 1\n          }\n        }\n      }} />\n\n        <FlexBox alignItems=\"center\" mb=\"1rem\">\n          <FormLabel component=\"small\" sx={{\n          color: \"text.disabled\"\n        }}>\n            Select Color\n          </FormLabel>\n          <RadioGroup row name=\"statusColor\" value={values.statusColor} onChange={handleChange}>\n            <Radio value=\"#61A9FF\" size=\"small\" color=\"primary\" />\n            <Radio value=\"#2CC5BD\" size=\"small\" color=\"success\" />\n            <Radio value=\"#FD396D\" size=\"small\" color=\"error\" />\n            <Radio value=\"#A798FF\" size=\"small\" color=\"info\" />\n          </RadioGroup>\n        </FlexBox>\n\n        <FlexBox>\n          <Button variant=\"contained\" fullWidth type=\"submit\">\n            Save\n          </Button>\n          <Box width=\"2rem\" />\n          <Button fullWidth onClick={() => setShowAddTodoForm(false)} sx={{\n          backgroundColor: \"secondary.300\",\n          color: \"text.disabled\",\n          \"&:hover\": {\n            backgroundColor: \"secondary.300\"\n          }\n        }}>\n            Cancel\n          </Button>\n        </FlexBox>\n      </Box>\n    </form>;\n};\n\nexport default AddTodoForm;","import { Box, styled } from \"@mui/material\";\nexport const DroppableWrapper = styled(Box)(() => ({\n  maxHeight: \"calc(100% - 53px)\",\n  minHeight: \"calc(100% - 53px)\",\n  padding: \"1rem\",\n  overflow: \"auto\",\n  \"&[data-rbd-droppable-id='todo']\": {\n    maxHeight: \"calc(100% - 129px)\",\n    minHeight: \"calc(100% - 129px)\"\n  }\n}));\nexport const ColorDot = styled(Box)(({\n  color\n}) => ({\n  width: 6,\n  height: 6,\n  marginTop: 6,\n  marginRight: 10,\n  borderRadius: \"50%\",\n  backgroundColor: color\n}));","import { Add, MoreHoriz } from \"@mui/icons-material\";\nimport { AvatarGroup, Box, Button, Card, Grid, IconButton, LinearProgress } from \"@mui/material\";\nimport AddIconButton from \"components/AddIconButton\";\nimport FlexBox from \"components/FlexBox\";\nimport { H3, H5, H6, Paragraph, Small } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport AddTodoForm from \"./AddTodoForm\";\nimport { DroppableWrapper } from \"./StyledComponent\";\nconst todoList = [{\n  id: \"01\",\n  title: \"Create Minimal Logo\",\n  date: \"9/17/2021\",\n  description: \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n  author: {\n    name: \"Tom Cruise\",\n    image: \"/static/avatar/001-man.svg\"\n  },\n  statusColor: \"primary.main\"\n}, {\n  id: \"02\",\n  title: \"Therapy Session\",\n  date: \"9/17/2021\",\n  description: \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n  author: {\n    name: \"Tom Cruise\",\n    image: \"/static/avatar/002-girl.svg\"\n  },\n  statusColor: \"primary.red\"\n}, {\n  id: \"03\",\n  title: \"Create Minimal Logo\",\n  date: \"9/17/2021\",\n  description: \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n  author: {\n    name: \"Tom Cruise\",\n    image: \"/static/avatar/005-man-1.svg\"\n  },\n  statusColor: \"primary.main\"\n}, {\n  id: \"04\",\n  title: \"Website UI Design\",\n  date: \"9/17/2021\",\n  description: \"Hey, Pixy can we get on a quick call? i need to show you something. You need to do some work for me ASAP. And you need to do it before Aug 25. Thanks get back to me.\",\n  author: {\n    name: \"Tom Cruise\",\n    image: \"/static/avatar/011-man-2.svg\"\n  },\n  statusColor: \"primary.yellow\"\n}];\nconst viewColumns = {\n  todo: {\n    name: \"To do\",\n    todos: todoList.slice(0, 2)\n  },\n  progress: {\n    name: \"In Progress\",\n    todos: [todoList[2]]\n  },\n  done: {\n    name: \"Done\",\n    todos: [todoList[3]]\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId === destination.droppableId && source.index === destination.index) {\n    return;\n  }\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.todos];\n    const destItems = [...destColumn.todos];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        todos: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        todos: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.todos];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        todos: copiedItems\n      }\n    });\n  }\n};\n\nconst Todo = () => {\n  const [columns, setColumns] = useState(viewColumns);\n  const [showAddTodoForm, setShowAddTodoForm] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  return <Grid container spacing={3}>\n      <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\n        {Object.entries(columns).map(([columnId, column], index) => {\n        return <Grid item xs={12} sm={6} lg={4} key={index}>\n              <Card sx={{\n            height: \"100%\",\n            maxHeight: 700\n          }}>\n                {columnId === \"todo\" ? <Box padding=\"1rem\">\n                    <H5>{t(column.name)}</H5>\n                    <Button fullWidth variant=\"contained\" onClick={() => setShowAddTodoForm(true)} sx={{\n                marginY: \"1rem\",\n                display: showAddTodoForm ? \"none\" : \"auto\"\n              }}>\n                      <Add />\n                    </Button>\n                    <AddTodoForm showAddTodoForm={showAddTodoForm} setShowAddTodoForm={setShowAddTodoForm} />\n                  </Box> : <H5 padding=\"1rem\">{t(column.name)}</H5>}\n\n                <Droppable droppableId={columnId}>\n                  {provided => {\n                return <DroppableWrapper {...provided.droppableProps} ref={provided.innerRef}>\n                        {column.todos.map((todo, index) => {\n                    return <Draggable draggableId={todo.id} index={index} key={todo.id}>\n                              {provided => {\n                        return <Card key={todo.id} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} style={{ ...provided.draggableProps.style\n                        }} sx={{\n                          boxShadow: 2,\n                          padding: \"1rem\",\n                          marginBottom: \"1.5rem\"\n                        }}>\n                                    <FlexBox alignItems=\"center\" justifyContent=\"space-between\">\n                                      <Small>July 2, 2020</Small>\n                                      <IconButton sx={{\n                              padding: 0\n                            }} // onClick={handleMoreClick}\n                            >\n                                        <MoreHoriz />\n                                      </IconButton>\n                                    </FlexBox>\n\n                                    <Box sx={{\n                            textAlign: \"center\",\n                            pt: 6,\n                            pb: 4\n                          }}>\n                                      <H3>Web Designing</H3>\n                                      <H6 color=\"text.disabled\" fontWeight={500} mt={0.5}>\n                                        Prototyping\n                                      </H6>\n                                    </Box>\n\n                                    <FlexBox justifyContent=\"space-between\" py={1}>\n                                      <Paragraph fontWeight={600}>\n                                        Project Progress\n                                      </Paragraph>\n                                      <Paragraph fontWeight={600}>\n                                        32%\n                                      </Paragraph>\n                                    </FlexBox>\n\n                                    <LinearProgress value={32} variant=\"determinate\" sx={{\n                            \"& .MuiLinearProgress-bar\": {\n                              backgroundColor: todo.statusColor\n                            }\n                          }} />\n\n                                    <FlexBox alignItems=\"center\" justifyContent=\"space-between\" pt=\"1.5rem\">\n                                      <FlexBox alignItems=\"center\">\n                                        <AvatarGroup>\n                                          <UkoAvatar alt=\"Remy Sharp\" src=\"/static/avatar/001-man.svg\" />\n                                          <UkoAvatar alt=\"Travis Howard\" src=\"/static/avatar/002-girl.svg\" />\n                                        </AvatarGroup>\n                                        <AddIconButton sx={{\n                                marginLeft: 0\n                              }} />\n                                      </FlexBox>\n\n                                      <Small sx={{\n                              backgroundColor: \"divider\",\n                              padding: \"5px 15px\",\n                              borderRadius: \"20px\",\n                              marginLeft: 1,\n                              color: \"text.disabled\",\n                              fontWeight: 600\n                            }}>\n                                        3 Weeks Left\n                                      </Small>\n                                    </FlexBox>\n                                  </Card>;\n                      }}\n                            </Draggable>;\n                  })}\n                        {provided.placeholder}\n                      </DroppableWrapper>;\n              }}\n                </Droppable>\n              </Card>\n            </Grid>;\n      })}\n      </DragDropContext>\n    </Grid>;\n};\n\nexport default Todo;","import { Box } from \"@mui/material\";\nimport Todo from \"components/todoList/Todo\";\nimport useTitle from \"hooks/useTitle\";\n\nconst TodoList = () => {\n  // change navbar title\n  useTitle(\"To Do List\");\n  return <Box pt={2} pb={4}>\n      <Todo />\n    </Box>;\n};\n\nexport default TodoList;","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = text => {\n  const {\n    title,\n    setTitle\n  } = useContext(TitleContext);\n  useEffect(() => setTitle(text), [text, setTitle]);\n  return title;\n};\n\nexport default useTitle;","import { Add } from \"@mui/icons-material\";\nimport { Box, IconButton } from \"@mui/material\";\n\nconst AddIconButton = props => {\n  return <IconButton sx={{\n    p: 0\n  }} {...props}>\n      <Box sx={{\n      width: 36,\n      height: 36,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      border: \"1px dashed\",\n      borderRadius: \"50%\",\n      borderColor: \"secondary.400\"\n    }}>\n        <Add fontSize=\"small\" sx={{\n        color: \"secondary.400\"\n      }} />\n      </Box>\n    </IconButton>;\n};\n\nexport default AddIconButton;","import { styled, TextField } from \"@mui/material\";\nconst StyledDarkTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"&:hover, & .MuiOutlinedInput-root:hover\": {\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: theme.palette.primary.main\n    }\n  },\n  \"& .MuiOutlinedInput-input\": {\n    fontSize: 12,\n    minHeight: 35,\n    fontWeight: 500,\n    borderRadius: \"8px\",\n    padding: \"0px 1rem\",\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: \"transparent\",\n    borderWidth: \"1px !important\"\n  },\n  \"& .MuiInputBase-root\": {\n    backgroundColor: theme.palette.mode === \"light\" ? theme.palette.text.secondary : theme.palette.divider\n  }\n}));\n\nconst DarkTextField = props => {\n  return <StyledDarkTextField {...props} fullWidth />;\n};\n\nexport default DarkTextField;"],"sourceRoot":""}