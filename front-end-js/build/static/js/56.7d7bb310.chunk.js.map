{"version":3,"sources":["components/pricing/PriceCard.jsx","pages/Pricing.jsx","hooks/useTitle.jsx"],"names":["PriceCard","item","Card","Box","sx","padding","borderBottom","borderColor","fontWeight","title","color","subTitle","List","list","map","li","index","ListItem","px","ListItemIcon","CheckCircle","ListItemText","paddingTop","Button","fullWidth","variant","endIcon","ArrowForward","fontSize","btnText","TableHeadCell","styled","TableCell","borderBottomColor","theme","palette","divider","textAlign","TableBodyCell","text","disabled","border","priceList","tableData","Pricing","useTitle","useTheme","py","pb","Grid","container","spacing","lg","md","xs","breakpoints","down","overflowX","Table","TableHead","TableRow","TableBody","useContext","TitleContext","setTitle","useEffect"],"mappings":"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","file":"static/js/56.7d7bb310.chunk.js","sourcesContent":["import { ArrowForward, CheckCircle } from \"@mui/icons-material\";\nimport { Box, Button, Card, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport { H1, H6 } from \"components/Typography\";\nimport React from \"react\"; // component props interface\n\nconst PriceCard = ({\n  item\n}) => {\n  return <Card>\n      <Box sx={{\n      padding: 4,\n      borderBottom: 1,\n      borderColor: \"divider\"\n    }}>\n        <H1 fontWeight={700}>{item.title}</H1>\n        <H6 color=\"text.disabled\">{item.subTitle}</H6>\n      </Box>\n\n      <Box padding={4}>\n        <List>\n          {item.list.map((li, index) => <ListItem sx={{\n          px: 0\n        }} key={index}>\n              <ListItemIcon>\n                <CheckCircle sx={{\n              color: \"primary.main\"\n            }} />\n              </ListItemIcon>\n              <ListItemText sx={{\n            \"& .MuiTypography-root\": {\n              fontWeight: 500,\n              color: \"text.disabled\"\n            }\n          }}>\n                {li}\n              </ListItemText>\n            </ListItem>)}\n        </List>\n      </Box>\n\n      <Box padding={4} paddingTop={0}>\n        <Button fullWidth variant=\"contained\" endIcon={<ArrowForward fontSize=\"large\" />}>\n          {item.btnText}\n        </Button>\n      </Box>\n    </Card>;\n};\n\nexport default PriceCard;","import { Box, Grid, styled, Table, TableBody, TableCell, TableHead, TableRow, useTheme } from \"@mui/material\";\nimport PriceCard from \"components/pricing/PriceCard\";\nimport { H1, H6 } from \"components/Typography\";\nimport useTitle from \"hooks/useTitle\";\n/// styled components\nconst TableHeadCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontSize: 21,\n  fontWeight: 700,\n  borderBottomColor: theme.palette.divider,\n  \"&:not(:first-of-type)\": {\n    textAlign: \"center\"\n  }\n}));\nconst TableBodyCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontWeight: 500,\n  color: theme.palette.text.disabled,\n  borderBottomColor: theme.palette.divider,\n  border: `1px solid ${theme.palette.divider}`,\n  \"&:not(:first-of-type)\": {\n    textAlign: \"center\"\n  },\n  \"&:last-of-type\": {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  }\n}));\n\nconst Pricing = () => {\n  // change navbar title\n  useTitle(\"Pricing\");\n  const theme = useTheme();\n  return <Box py={4}>\n      <Box textAlign=\"center\" pb={6}>\n        <H1 fontSize={36} fontWeight={700}>\n          A Great Experience is Priceless.\n        </H1>\n        <H6 color=\"text.disabled\" fontWeight={500}>\n          A better experience for developers creates a better experience for\n          users.\n        </H6>\n      </Box>\n\n      <Box pb={8}>\n        <Grid container spacing={3}>\n          {priceList.map((item, index) => <Grid item lg={4} md={6} xs={12} key={index}>\n              <PriceCard item={item} />\n            </Grid>)}\n        </Grid>\n      </Box>\n\n      <Box pb={6}>\n        <Box textAlign=\"center\" py={4}>\n          <H1 fontSize={36} fontWeight={700}>\n            Compare Plans\n          </H1>\n          <H6 color=\"text.disabled\" fontWeight={500}>\n            A better experience for developers creates a better experience for\n            users.\n          </H6>\n        </Box>\n\n        <Box sx={{\n        [theme.breakpoints.down(\"sm\")]: {\n          overflowX: \"auto\"\n        }\n      }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeadCell>Features</TableHeadCell>\n                <TableHeadCell>Hobby</TableHeadCell>\n                <TableHeadCell>Professional</TableHeadCell>\n                <TableHeadCell>Enterprise</TableHeadCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {tableData.map((item, index) => <TableRow key={index}>\n                  <TableBodyCell>{item[0]}</TableBodyCell>\n                  <TableBodyCell>{item[1]}</TableBodyCell>\n                  <TableBodyCell>{item[2]}</TableBodyCell>\n                  <TableBodyCell>{item[3]}</TableBodyCell>\n                </TableRow>)}\n            </TableBody>\n          </Table>\n        </Box>\n      </Box>\n    </Box>;\n};\n\nconst priceList = [{\n  title: \"Hobby\",\n  subTitle: \"Free for non-commercial sites\",\n  list: [\"For non-commercial & hobby sites\", \"Deploy from CLI or personal git integrations\", \"Built-in CI/CD\", \"Previews for every git push\", \"Email support\"],\n  btnText: \"Deploy Hobby Project\"\n}, {\n  title: \"Professional\",\n  subTitle: \"$20/mo per member\",\n  list: [\"For non-commercial & hobby sites\", \"Deploy from CLI or personal git integrations\", \"Built-in CI/CD\", \"Previews for every git push\", \"Email support\"],\n  btnText: \"Start free 14 day pro trial\"\n}, {\n  title: \"Enterprise\",\n  subTitle: \"Suited to your business\",\n  list: [\"Maximize developer productivity\", \"SSO/SAML\", \"Scaled bandwidth pricing\", \"Isolated infrastructure for the fastest builds & zero queues\", \"Dedicated support manager & SLAs\"],\n  btnText: \"Contact Sales\"\n}];\nconst tableData = [[\"Bandwidth\", \"100 GB\", \"1 TB\", \"Custom\"], [\"Serverless Function Execution\", \"100 GB\", \"1,000 GB\", \"Custom\"], [\"Serverless Function Execution Timeout\", \"5 seconds\", \"15 seconds\", \"30 seconds\"], [\"Image Optimization\", \"1000\", \"5000\", \"Custom\"], [\"Multi-Region Serverless Functions\", \"\", \"\", \"Custom\"]];\nexport default Pricing;","import { TitleContext } from \"contexts/TitleContext\";\nimport { useContext, useEffect } from \"react\";\n\nconst useTitle = text => {\n  const {\n    title,\n    setTitle\n  } = useContext(TitleContext);\n  useEffect(() => setTitle(text), [text, setTitle]);\n  return title;\n};\n\nexport default useTitle;"],"sourceRoot":""}