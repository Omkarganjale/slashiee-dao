{"version":3,"sources":["../node_modules/@mui/icons-material/esm/KeyboardArrowDown.js","components/adminEcommerce/TabLabel.jsx","../node_modules/@mui/icons-material/esm/CameraAlt.js","components/adminEcommerce/AddCustomerModal.jsx","components/adminEcommerce/columnShapes/CustomerColumnShape.jsx","pages/adminEcommerce/CustomerList.jsx"],"names":["createSvgIcon","_jsx","d","TabLabel","title","total","alignItems","color","sx","backgroundColor","padding","borderRadius","marginLeft","cx","cy","r","StyledModalCard","styled","Card","theme","top","left","maxWidth","minWidth","position","boxShadow","shadows","transform","width","breakpoints","down","height","overflow","StyledBadge","Badge","palette","primary","main","background","paper","StyledMenuItem","MenuItem","fontSize","fontWeight","text","disabled","StyledSelect","Select","mode","secondary","divider","AddCustomerModal","open","onClose","edit","data","initialValues","firstName","name","split","lastName","email","location","phone","city","country","state","status","toLowerCase","fieldValidationSchema","Yup","shape","min","required","useFormik","validationSchema","onSubmit","values","console","log","errors","handleChange","handleSubmit","touched","Modal","Box","textAlign","py","overlap","anchorOrigin","vertical","horizontal","badgeContent","htmlFor","type","accept","id","style","display","IconButton","component","CameraAlt","UkoAvatar","alt","src","avatar","Grid","container","spacing","className","item","sm","xs","mb","DarkTextField","placeholder","onChange","value","error","Boolean","helperText","fullWidth","input","InputBase","IconComponent","KeyboardArrowDown","FlexBox","justifyContent","marginTop","Button","variant","onClick","marginRight","borderColor","CustomerColumnShape","Header","accessor","Cell","row","original","flexDirection","ml","useState","openModal","setOpenModal","EditIconButton","tabs","label","count","CustomerList","useTitle","t","useTranslation","currentTab","setCurrentTab","addCustomer","setAddCustomer","filteredData","customersFakeData","filter","pt","pb","SearchInput","endIcon","Add","TabContext","TabList","_","newValue","map","Tab","disableRipple","CustomTable","columnShape"],"mappings":"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","file":"static/js/44.ffe307e8.chunk.js","sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import FlexBox from \"components/FlexBox\";\nimport { H6, Small } from \"components/Typography\";\n\nconst TabLabel = ({\n  title,\n  total\n}) => {\n  return <FlexBox alignItems=\"center\" color=\"text.primary\">\n      <H6>{title}</H6>\n      <Small sx={{\n      backgroundColor: \"divider\",\n      padding: \"0px 10px\",\n      borderRadius: \"10px\",\n      marginLeft: 1\n    }}>\n        {total}\n      </Small>\n    </FlexBox>;\n};\n\nexport default TabLabel;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'CameraAlt');","import { CameraAlt, KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Badge, Box, Button, Card, Grid, IconButton, InputBase, MenuItem, Modal, Select, styled } from \"@mui/material\";\nimport DarkTextField from \"components/DarkTextField\";\nimport FlexBox from \"components/FlexBox\";\nimport { H2, H6 } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\"; // component props interface\n\n// styled components\nconst StyledModalCard = styled(Card)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  maxWidth: 700,\n  minWidth: 300,\n  position: \"absolute\",\n  padding: \"1.5rem\",\n  boxShadow: theme.shadows[2],\n  transform: \"translate(-50%, -50%)\",\n  width: \"100%\",\n  [theme.breakpoints.down(\"sm\")]: {\n    \"& .main-form\": {\n      height: 200,\n      overflow: \"auto\"\n    }\n  }\n}));\nconst StyledBadge = styled(Badge)(({\n  theme\n}) => ({\n  \"& .MuiBadge-badge\": {\n    width: 25,\n    height: 25,\n    borderRadius: \"50%\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`\n  }\n}));\nconst StyledMenuItem = styled(MenuItem)(({\n  theme\n}) => ({\n  fontSize: 12,\n  fontWeight: 500,\n  color: theme.palette.text.disabled\n}));\nconst StyledSelect = styled(Select)(({\n  theme\n}) => ({\n  height: 35,\n  fontSize: 12,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.mode === \"light\" ? theme.palette.secondary[300] : theme.palette.divider,\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AddCustomerModal = ({\n  open,\n  onClose,\n  edit,\n  data\n}) => {\n  const initialValues = {\n    firstName: data?.name.split(\" \")[0] || \"\",\n    lastName: data?.name.split(\" \")[1] || \"\",\n    email: data?.email || \"\",\n    location: data?.location || \"\",\n    phone: data?.phone || \"\",\n    city: \"\",\n    country: \"\",\n    state: \"\",\n    status: data?.status.toLowerCase() || \"active\"\n  };\n  const fieldValidationSchema = Yup.object().shape({\n    firstName: Yup.string().min(3, \"Too Short\").required(\"First Name is Required!\"),\n    lastName: Yup.string().required(\"Last Name is Required!\"),\n    email: Yup.string().required(\"Email is Required!\"),\n    location: Yup.string().required(\"Location is Required!\"),\n    phone: Yup.string().min(11, \"Too short\").required(\"Phone is Required!\"),\n    country: Yup.string().min(3, \"Too short\").required(\"Country is Required!\"),\n    city: Yup.string().min(3, \"Too short\").required(\"City is Required!\"),\n    state: Yup.string().min(3, \"Too short\").required(\"State is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema: fieldValidationSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return <Modal open={open} onClose={onClose}>\n      <StyledModalCard>\n        <H2>{edit ? \"Edit Product\" : \"Add new Customer\"}</H2>\n\n        <Box textAlign=\"center\" py={3}>\n          <StyledBadge overlap=\"circular\" anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }} badgeContent={<label htmlFor=\"icon-button-file\">\n                <input type=\"file\" accept=\"image/*\" id=\"icon-button-file\" style={{\n            display: \"none\"\n          }} />\n\n                <IconButton aria-label=\"upload picture\" component=\"span\">\n                  <CameraAlt sx={{\n              fontSize: 16,\n              color: \"background.paper\"\n            }} />\n                </IconButton>\n              </label>}>\n            <UkoAvatar sx={{\n            width: 100,\n            height: 100\n          }} alt=\"Travis Howard\" src={data && edit ? data.avatar : \"/static/user/profile-picture.png\"} />\n          </StyledBadge>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2} className=\"main-form\">\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>First Name</H6>\n              <DarkTextField placeholder=\"John\" name=\"firstName\" onChange={handleChange} value={values.firstName} error={Boolean(errors.firstName && touched.firstName)} helperText={touched.firstName && errors.firstName} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Last Name</H6>\n              <DarkTextField placeholder=\"Smith\" name=\"lastName\" onChange={handleChange} value={values.lastName} error={Boolean(errors.lastName && touched.lastName)} helperText={touched.lastName && errors.lastName} />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Email</H6>\n              <DarkTextField placeholder=\"uilib@gmail.com\" name=\"email\" onChange={handleChange} value={values.email} error={Boolean(errors.email && touched.email)} helperText={touched.email && errors.email} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Location</H6>\n              <DarkTextField placeholder=\"Corner View\" name=\"location\" onChange={handleChange} value={values.location} error={Boolean(errors.location && touched.location)} helperText={touched.location && errors.location} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Phone</H6>\n              <DarkTextField placeholder=\"+0188000000\" name=\"phone\" onChange={handleChange} value={values.phone} error={Boolean(errors.phone && touched.phone)} helperText={touched.phone && errors.phone} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>City</H6>\n              <DarkTextField placeholder=\"Sylhet\" name=\"city\" onChange={handleChange} value={values.city} error={Boolean(errors.city && touched.city)} helperText={touched.city && errors.city} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Country</H6>\n              <DarkTextField placeholder=\"Bangladesh\" name=\"country\" onChange={handleChange} value={values.country} error={Boolean(errors.country && touched.country)} helperText={touched.country && errors.country} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>State/Region</H6>\n              <DarkTextField placeholder=\"Asia\" name=\"state\" onChange={handleChange} value={values.state} error={Boolean(errors.state && touched.state)} helperText={touched.state && errors.state} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Status</H6>\n              <StyledSelect fullWidth name=\"status\" value={values.status} onChange={handleChange} input={<InputBase placeholder=\"Asia\" />} IconComponent={() => <KeyboardArrowDown fontSize=\"small\" />}>\n                <StyledMenuItem value=\"active\">Active</StyledMenuItem>\n                <StyledMenuItem value=\"disabled\">Disabled</StyledMenuItem>\n              </StyledSelect>\n            </Grid>\n          </Grid>\n\n          <FlexBox justifyContent=\"flex-end\" marginTop={2}>\n            <Button fullWidth variant=\"outlined\" onClick={onClose} sx={{\n            width: 124,\n            fontSize: 12,\n            marginRight: 2,\n            color: \"text.disabled\",\n            borderColor: \"text.disabled\"\n          }}>\n              Cancel\n            </Button>\n            <Button fullWidth type=\"submit\" variant=\"contained\" sx={{\n            width: 124,\n            fontSize: 12\n          }}>\n              Save\n            </Button>\n          </FlexBox>\n        </form>\n      </StyledModalCard>\n    </Modal>;\n};\n\nexport default AddCustomerModal;","import EditIconButton from \"components/EditIconButton\";\nimport FlexBox from \"components/FlexBox\";\nimport { H6, Small, Tiny } from \"components/Typography\";\nimport UkoAvatar from \"components/UkoAvatar\";\nimport { useState } from \"react\";\nimport AddCustomerModal from \"../AddCustomerModal\";\nconst CustomerColumnShape = [{\n  Header: \"Customer Name\",\n  accessor: \"customer\",\n  minWidth: 200,\n  Cell: ({\n    row\n  }) => {\n    const {\n      avatar,\n      name,\n      position\n    } = row.original;\n    return <FlexBox alignItems=\"center\">\n          <UkoAvatar src={avatar} />\n          <FlexBox flexDirection=\"column\" ml={1.5}>\n            <H6 color=\"text.primary\">{name}</H6>\n            <Tiny color=\"text.disabled\">{position}</Tiny>\n          </FlexBox>\n        </FlexBox>;\n  }\n}, {\n  Header: \"Location\",\n  accessor: \"location\",\n  minWidth: 200\n}, {\n  Header: \"Date\",\n  accessor: \"date\",\n  minWidth: 150\n}, {\n  Header: \"Phone\",\n  accessor: \"phone\",\n  minWidth: 150\n}, {\n  Header: \"Status\",\n  accessor: \"status\",\n  minWidth: 130,\n  maxWidth: 130,\n  Cell: ({\n    value\n  }) => <Small sx={{\n    backgroundColor: value.toLowerCase() === \"active\" ? \"success.main\" : \"error.main\",\n    color: \"background.paper\",\n    borderRadius: 10,\n    padding: \".2rem 1rem\"\n  }}>\n        {value}\n      </Small>\n}, {\n  Header: \"Action\",\n  accessor: \"action\",\n  maxWidth: 100,\n  Cell: ({\n    row\n  }) => {\n    const [openModal, setOpenModal] = useState(false);\n    return <>\n          <EditIconButton onClick={() => setOpenModal(true)} />\n\n          <AddCustomerModal edit open={openModal} data={row.original} onClose={() => setOpenModal(false)} />\n        </>;\n  }\n}];\nexport default CustomerColumnShape;","import { Add } from \"@mui/icons-material\";\nimport { TabContext, TabList } from \"@mui/lab\";\nimport { Box, Button, Tab } from \"@mui/material\";\nimport AddCustomerModal from \"components/adminEcommerce/AddCustomerModal\";\nimport CustomerColumnShape from \"components/adminEcommerce/columnShapes/CustomerColumnShape\";\nimport CustomTable from \"components/adminEcommerce/CustomTable\";\nimport { customersFakeData } from \"components/adminEcommerce/fakeData\";\nimport TabLabel from \"components/adminEcommerce/TabLabel\";\nimport SearchInput from \"components/SearchInput\";\nimport useTitle from \"hooks/useTitle\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { HeadingWrapper } from \"./ProductList\";\n\nconst CustomerList = () => {\n  // change navbar title\n  useTitle(\"Customer List\");\n  const {\n    t\n  } = useTranslation();\n  const [currentTab, setCurrentTab] = useState(\"1\");\n  const [addCustomer, setAddCustomer] = useState(false); // handle tab item change\n\n  const handleTabChange = (_, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  const filteredData = customersFakeData.filter(item => item.status === \"Active\" && currentTab === \"2\" || item.status === \"Blocked\" && currentTab === \"3\" || currentTab === \"1\");\n  return <Box pt={2} pb={4}>\n      <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\n        <SearchInput placeholder=\"Find Customer\" />\n\n        <Button variant=\"contained\" endIcon={<Add />} onClick={() => setAddCustomer(true)}>\n          {t(\"Add Customer\")}\n        </Button>\n\n        <AddCustomerModal open={addCustomer} onClose={() => setAddCustomer(false)} />\n      </HeadingWrapper>\n\n      <TabContext value={currentTab}>\n        <TabList onChange={handleTabChange} variant=\"scrollable\" sx={{\n        mb: 1\n      }}>\n          {tabs.map(({\n          value,\n          label,\n          count\n        }) => <Tab disableRipple value={value} label={<TabLabel title={t(label)} total={count} />} key={value} />)}\n        </TabList>\n\n        <CustomTable data={filteredData} columnShape={CustomerColumnShape} />\n      </TabContext>\n    </Box>;\n};\n\nconst tabs = [{\n  value: \"1\",\n  label: \"All\",\n  count: 35\n}, {\n  value: \"2\",\n  label: \"Active\",\n  count: 45\n}, {\n  value: \"3\",\n  label: \"Blocked\",\n  count: 25\n}];\nexport default CustomerList;"],"sourceRoot":""}